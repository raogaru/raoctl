
--************************************************************************** 
--
-- Triggers to update timestamps - can be used for conflict resolution
-- of asynchronous multimaster replication.
-- 
--************************************************************************** 

CREATE OR REPLACE TRIGGER rWF_ACTIVITIES
BEFORE UPDATE OR INSERT ON WF_ACTIVITIES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ACTIVITY_ATTRIBUTES
BEFORE UPDATE OR INSERT ON WF_ACTIVITY_ATTRIBUTES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ACTIVITY_INSTANCES
BEFORE UPDATE OR INSERT ON WF_ACTIVITY_INSTANCES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ACTIVITY_INSTANCES_ARCH
BEFORE UPDATE OR INSERT ON WF_ACTIVITY_INSTANCES_ARCH
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ACTI_ATTRIBUTE_INSTANCES
BEFORE UPDATE OR INSERT ON WF_ACTI_ATTRIBUTE_INSTANCES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ACTI_ATTRIB_INSTANCES_ARCH
BEFORE UPDATE OR INSERT ON WF_ACTI_ATTRIB_INSTANCES_ARCH
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ACTUAL_PARAMETERS
BEFORE UPDATE OR INSERT ON WF_ACTUAL_PARAMETERS
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_APPLICATIONS
BEFORE UPDATE OR INSERT ON WF_APPLICATIONS
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ATTRIBUTES
BEFORE UPDATE OR INSERT ON WF_ATTRIBUTES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ATTRIBUTE_INSTANCES
BEFORE UPDATE OR INSERT ON WF_ATTRIBUTE_INSTANCES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_ATTRIBUTE_INSTANCES_ARCH
BEFORE UPDATE OR INSERT ON WF_ATTRIBUTE_INSTANCES_ARCH
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_DEADLINES
BEFORE UPDATE OR INSERT ON WF_DEADLINES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_EXTERNAL_REFERENCES
BEFORE UPDATE OR INSERT ON WF_EXTERNAL_REFERENCES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_FORMAL_PARAMETERS
BEFORE UPDATE OR INSERT ON WF_FORMAL_PARAMETERS
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_PARTICIPANTS
BEFORE UPDATE OR INSERT ON WF_PARTICIPANTS
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_PARTICIPANT_RELATIONS
BEFORE UPDATE OR INSERT ON WF_PARTICIPANT_RELATIONS
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_PERFORMERS
BEFORE UPDATE OR INSERT ON WF_PERFORMERS
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_PERFORMERS_ARCH
BEFORE UPDATE OR INSERT ON WF_PERFORMERS_ARCH
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_PROCESSES
BEFORE UPDATE OR INSERT ON WF_PROCESSES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_PROCESS_INSTANCES
BEFORE UPDATE OR INSERT ON WF_PROCESS_INSTANCES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_PROCESS_INSTANCES_ARCH
BEFORE UPDATE OR INSERT ON WF_PROCESS_INSTANCES_ARCH
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_TRANSITIONS
BEFORE UPDATE OR INSERT ON WF_TRANSITIONS
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_TRANSITION_INSTANCES
BEFORE UPDATE OR INSERT ON WF_TRANSITION_INSTANCES
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/

CREATE OR REPLACE TRIGGER rWF_TRANSITION_INSTANCES_ARCH
BEFORE UPDATE OR INSERT ON WF_TRANSITION_INSTANCES_ARCH
FOR EACH ROW
BEGIN
-- Don't fire when this update is the result of a replication data update.
IF NOT DBMS_REPUTIL.FROM_REMOTE
THEN
:NEW.REPLICATION_TIMESTAMP := SYSDATE;
END IF;
END;
/
